// Code generated by mockery v2.42.3. DO NOT EDIT.

// Copyright (c) Abstract Machines

package mocks

import (
	errors "github.com/absmach/magistrala/pkg/errors"
	mock "github.com/stretchr/testify/mock"
)

// Emailer is an autogenerated mock type for the Emailer type
type Emailer struct {
	mock.Mock
}

// SendPasswordReset provides a mock function with given fields: To, host, user, token
func (_m *Emailer) SendPasswordReset(To []string, host string, user string, token string) errors.Error {
	ret := _m.Called(To, host, user, token)

	if len(ret) == 0 {
		panic("no return value specified for SendPasswordReset")
	}

	var r0 errors.Error
	if rf, ok := ret.Get(0).(func([]string, string, string, string) errors.Error); ok {
		r0 = rf(To, host, user, token)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(errors.Error)
		}
	}

	return r0
}

// NewEmailer creates a new instance of Emailer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmailer(t interface {
	mock.TestingT
	Cleanup(func())
}) *Emailer {
	mock := &Emailer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
